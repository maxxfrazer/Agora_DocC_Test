{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"startRtmpStreamWithoutTranscoding"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"url"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"0: Success."},{"type":"text","text":" "},{"type":"text","text":"< 0: Failure."},{"type":"text","text":" "},{"type":"text","text":"-2: The URL is null or the string length is 0."},{"type":"text","text":" "},{"type":"text","text":"-7: The SDK is not initialized before calling this method."},{"type":"text","text":" "},{"type":"text","text":"-19: The Media Push URL is already in use, use another URL instead."}]}]},{"kind":"parameters","parameters":[{"name":"url","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The address of Media Push. The format is RTMP or RTMPS. The character length cannot exceed 1024 bytes. Special characters such as Chinese characters are not supported."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Ensure that you enable the Media Push service before using this function. See Enable Media Push . Call this method after joining a channel. Only hosts in the LIVE_BROADCASTING profile can call this method. If you want to retry pushing streams after a failed push, make sure to call stopRtmpStream first, then call this method to retry pushing streams; otherwise, the SDK returns the same error code as the last failed push. Agora recommends that you use the server-side Media Push function.  You can call this method to push an audio or video stream to the specified CDN address. This method can push media streams to only one CDN address at a time, so if you need to push streams to multiple addresses, call this method multiple times. After you call this method, the SDK triggers the rtmpStreamingChangedToState callback on the local client to report the state of the streaming."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/agorartckit\/agorartcenginekit\/startrtmpstreamwithouttranscoding(_:)"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/agorartckit\/agorartcenginekit\/startrtmpstreamwithouttranscoding(_:)"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/startRtmpStreamWithoutTranscoding(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Starts pushing media streams to a CDN without transcoding."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"startRtmpStreamWithoutTranscoding"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"title":"startRtmpStreamWithoutTranscoding(_:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"c:objc(cs)AgoraRtcEngineKit(im)startRtmpStreamWithoutTranscoding:","modules":[{"name":"AgoraRtcKit"}],"navigatorTitle":[{"kind":"identifier","text":"startRtmpStreamWithoutTranscoding:"}]},"hierarchy":{"paths":[["doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit","doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit"]]},"references":{"doc://AgoraRtcKit/documentation/AgoraRtcKit/AgoraRtcEngineKit/startRtmpStreamWithoutTranscoding(_:)":{"role":"symbol","title":"startRtmpStreamWithoutTranscoding(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"startRtmpStreamWithoutTranscoding"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"abstract":[{"type":"text","text":"Starts pushing media streams to a CDN without transcoding."}],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/startRtmpStreamWithoutTranscoding(_:)","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"startRtmpStreamWithoutTranscoding:"}],"url":"\/documentation\/agorartckit\/agorartcenginekit\/startrtmpstreamwithouttranscoding(_:)"},"doc://AgoraRtcKit/documentation/AgoraRtcKit":{"role":"collection","title":"AgoraRtcKit","abstract":[{"type":"text","text":"Summary"}],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit","kind":"symbol","type":"topic","url":"\/documentation\/agorartckit"},"doc://AgoraRtcKit/documentation/AgoraRtcKit/AgoraRtcEngineKit":{"role":"symbol","title":"AgoraRtcEngineKit","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AgoraRtcEngineKit"}],"abstract":[{"type":"text","text":"The basic interface of the Agora SDK that implements the core functions of real-time communication."}],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AgoraRtcEngineKit"}],"url":"\/documentation\/agorartckit\/agorartcenginekit"}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"replace","path":"\/metadata\/roleHeading","value":"Instance Method"},{"op":"replace","path":"\/metadata\/title","value":"startRtmpStreamWithoutTranscoding:"},{"op":"replace","path":"\/metadata\/symbolKind","value":"method"},{"op":"replace","path":"\/metadata\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"startRtmpStreamWithoutTranscoding:"}]},{"op":"add","path":"\/topicSections","value":null},{"op":"add","path":"\/relationshipsSections","value":null},{"op":"add","path":"\/seeAlsoSections","value":null},{"op":"replace","path":"\/primaryContentSections\/0","value":{"kind":"declarations","declarations":[{"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","text":"int","preciseIdentifier":"c:I"},{"kind":"text","text":") "},{"kind":"identifier","text":"startRtmpStreamWithoutTranscoding:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NSString","preciseIdentifier":"c:objc(cs)NSString"},{"kind":"text","text":" *)"},{"kind":"internalParam","text":"url"},{"kind":"text","text":";"}],"languages":["occ"],"platforms":["iOS"]}]}},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit~1startRtmpStreamWithoutTranscoding(_:)\/title","value":"startRtmpStreamWithoutTranscoding:"},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit~1startRtmpStreamWithoutTranscoding(_:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"startRtmpStreamWithoutTranscoding:"}]},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit\/title","value":"AgoraRtcEngineKit"},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit\/fragments","value":[{"kind":"identifier","text":"AgoraRtcEngineKit"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}