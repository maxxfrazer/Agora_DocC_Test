{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stopRtmpStreamEx"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"url"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"connection"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcConnection","preciseIdentifier":"c:objc(cs)AgoraRtcConnection","text":"AgoraRtcConnection"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"url","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The address of Media Push. The format is RTMP or RTMPS. The"},{"type":"text","text":" "},{"type":"text","text":"character length cannot exceed 1024 bytes. Special characters such as Chinese"},{"type":"text","text":" "},{"type":"text","text":"characters are not supported."}]}]},{"name":"connection","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The connection information. See AgoraRtcConnection ."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"0: Success. < 0: Failure. -2: The URL is null or the string length"},{"type":"text","text":" "},{"type":"text","text":"is 0. -7: The SDK is not initialized before calling this method. -19: The"},{"type":"text","text":" "},{"type":"text","text":"Media Push URL is already in use, use another URL instead."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/agorartckit\/agorartcenginekit\/stoprtmpstreamex(_:connection:)"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/agorartckit\/agorartcenginekit\/stoprtmpstreamex(_:connection:)"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/stopRtmpStreamEx(_:connection:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Starts pushing media streams to a CDN without transcoding."},{"type":"text","text":" "},{"type":"text","text":"Ensure that you enable the Media Push service before using this function. See"},{"type":"text","text":" "},{"type":"text","text":"Enable Media Push.Call this method after joining a channel.Only hosts in the"},{"type":"text","text":" "},{"type":"text","text":"LIVE_BROADCASTING profile can call this method.If you want to retry pushing"},{"type":"text","text":" "},{"type":"text","text":"streams after a failed push, make sure to call stopRtmpStream first, then"},{"type":"text","text":" "},{"type":"text","text":"call this method to retry pushing streams; otherwise, the SDK returns the"},{"type":"text","text":" "},{"type":"text","text":"same error code as the last failed push.Sincev4.1.0Agora recommends that you"},{"type":"text","text":" "},{"type":"text","text":"use the server-side Media Push function. You can call this method to push an"},{"type":"text","text":" "},{"type":"text","text":"audio or video stream to the specified CDN address. This method can push"},{"type":"text","text":" "},{"type":"text","text":"media streams to only one CDN address at a time, so if you need to push"},{"type":"text","text":" "},{"type":"text","text":"streams to multiple addresses, call this method multiple times.After you call"},{"type":"text","text":" "},{"type":"text","text":"this method, the SDK triggers the rtmpStreamingChangedToState callback on the"},{"type":"text","text":" "},{"type":"text","text":"local client to report the state of the streaming."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stopRtmpStreamEx"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"connection"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AgoraRtcConnection","preciseIdentifier":"c:objc(cs)AgoraRtcConnection"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"title":"stopRtmpStreamEx(_:connection:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"c:objc(cs)AgoraRtcEngineKit(im)stopRtmpStreamEx:connection:","modules":[{"name":"AgoraRtcKit"}],"navigatorTitle":[{"kind":"identifier","text":"stopRtmpStreamEx:connection:"}]},"hierarchy":{"paths":[["doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit","doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit"]]},"references":{"doc://AgoraRtcKit/documentation/AgoraRtcKit/AgoraRtcConnection":{"role":"symbol","title":"AgoraRtcConnection","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AgoraRtcConnection"}],"abstract":[],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcConnection","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AgoraRtcConnection"}],"url":"\/documentation\/agorartckit\/agorartcconnection"},"doc://AgoraRtcKit/documentation/AgoraRtcKit/AgoraRtcEngineKit":{"role":"symbol","title":"AgoraRtcEngineKit","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AgoraRtcEngineKit"}],"abstract":[{"type":"text","text":"The basic interface of the Agora SDK that implements the core functions of"},{"type":"text","text":" "},{"type":"text","text":"real-time communication. AgoraRtcEngineKit provides the main methods that"},{"type":"text","text":" "},{"type":"text","text":"your app can call."}],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AgoraRtcEngineKit"}],"url":"\/documentation\/agorartckit\/agorartcenginekit"},"doc://AgoraRtcKit/documentation/AgoraRtcKit":{"role":"collection","title":"AgoraRtcKit","abstract":[{"type":"text","text":"Summary"}],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit","kind":"symbol","type":"topic","url":"\/documentation\/agorartckit"},"doc://AgoraRtcKit/documentation/AgoraRtcKit/AgoraRtcEngineKit/stopRtmpStreamEx(_:connection:)":{"role":"symbol","title":"stopRtmpStreamEx(_:connection:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stopRtmpStreamEx"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"connection"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AgoraRtcConnection","preciseIdentifier":"c:objc(cs)AgoraRtcConnection"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"abstract":[{"type":"text","text":"Starts pushing media streams to a CDN without transcoding."},{"type":"text","text":" "},{"type":"text","text":"Ensure that you enable the Media Push service before using this function. See"},{"type":"text","text":" "},{"type":"text","text":"Enable Media Push.Call this method after joining a channel.Only hosts in the"},{"type":"text","text":" "},{"type":"text","text":"LIVE_BROADCASTING profile can call this method.If you want to retry pushing"},{"type":"text","text":" "},{"type":"text","text":"streams after a failed push, make sure to call stopRtmpStream first, then"},{"type":"text","text":" "},{"type":"text","text":"call this method to retry pushing streams; otherwise, the SDK returns the"},{"type":"text","text":" "},{"type":"text","text":"same error code as the last failed push.Sincev4.1.0Agora recommends that you"},{"type":"text","text":" "},{"type":"text","text":"use the server-side Media Push function. You can call this method to push an"},{"type":"text","text":" "},{"type":"text","text":"audio or video stream to the specified CDN address. This method can push"},{"type":"text","text":" "},{"type":"text","text":"media streams to only one CDN address at a time, so if you need to push"},{"type":"text","text":" "},{"type":"text","text":"streams to multiple addresses, call this method multiple times.After you call"},{"type":"text","text":" "},{"type":"text","text":"this method, the SDK triggers the rtmpStreamingChangedToState callback on the"},{"type":"text","text":" "},{"type":"text","text":"local client to report the state of the streaming."}],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/stopRtmpStreamEx(_:connection:)","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"stopRtmpStreamEx:connection:"}],"url":"\/documentation\/agorartckit\/agorartcenginekit\/stoprtmpstreamex(_:connection:)"}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"replace","path":"\/metadata\/roleHeading","value":"Instance Method"},{"op":"replace","path":"\/metadata\/title","value":"stopRtmpStreamEx:connection:"},{"op":"replace","path":"\/metadata\/symbolKind","value":"method"},{"op":"replace","path":"\/metadata\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"stopRtmpStreamEx:connection:"}]},{"op":"add","path":"\/topicSections","value":null},{"op":"add","path":"\/relationshipsSections","value":null},{"op":"add","path":"\/seeAlsoSections","value":null},{"op":"replace","path":"\/primaryContentSections\/0","value":{"kind":"declarations","declarations":[{"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","text":"int","preciseIdentifier":"c:I"},{"kind":"text","text":") "},{"kind":"identifier","text":"stopRtmpStreamEx:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NSString","preciseIdentifier":"c:objc(cs)NSString"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"url"},{"kind":"text","text":" "},{"kind":"identifier","text":"connection:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcConnection","preciseIdentifier":"c:objc(cs)AgoraRtcConnection","text":"AgoraRtcConnection"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"connection"},{"kind":"text","text":";"}],"languages":["occ"],"platforms":["iOS"]}]}},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcConnection\/title","value":"AgoraRtcConnection"},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcConnection\/fragments","value":[{"kind":"identifier","text":"AgoraRtcConnection"}]},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit\/title","value":"AgoraRtcEngineKit"},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit\/fragments","value":[{"kind":"identifier","text":"AgoraRtcEngineKit"}]},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit~1stopRtmpStreamEx(_:connection:)\/title","value":"stopRtmpStreamEx:connection:"},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit~1stopRtmpStreamEx(_:connection:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"stopRtmpStreamEx:connection:"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}