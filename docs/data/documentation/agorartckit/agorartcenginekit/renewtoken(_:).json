{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"renewToken"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"token"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"token","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The new token."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"0: Success. < 0: Failure. -2: The parameter is invalid. For"},{"type":"text","text":" "},{"type":"text","text":"example, the token is invalid. You need to fill in a valid parameter. -7: The"},{"type":"text","text":" "},{"type":"text","text":"AgoraRtcEngineKit object has not been initialized. You need to initialize the"},{"type":"text","text":" "},{"type":"text","text":"AgoraRtcEngineKit object before calling this method."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/agorartckit\/agorartcenginekit\/renewtoken(_:)"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/agorartckit\/agorartcenginekit\/renewtoken(_:)"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/renewToken(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Renews the token."},{"type":"text","text":" "},{"type":"text","text":"The SDK triggers the tokenPrivilegeWillExpire callback.The"},{"type":"text","text":" "},{"type":"text","text":"connectionChangedToState callback reports"},{"type":"text","text":" "},{"type":"text","text":"AgoraConnectionChangedReasonTokenExpired(9)."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"renewToken"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"title":"renewToken(_:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"c:objc(cs)AgoraRtcEngineKit(im)renewToken:","modules":[{"name":"AgoraRtcKit"}],"navigatorTitle":[{"kind":"identifier","text":"renewToken:"}]},"hierarchy":{"paths":[["doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit","doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit"]]},"seeAlsoSections":[{"title":"Channel Management","identifiers":["doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/joinChannel(byToken:channelId:info:uid:joinSuccess:)","doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/joinChannel(byToken:channelId:uid:mediaOptions:joinSuccess:)","doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/updateChannel(with:)","doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/leaveChannel(_:)","doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/leaveChannel(_:leaveChannelBlock:)","doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/setClientRole(_:options:)","doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/setClientRole(_:)","doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/getConnectionState()"],"generated":true}],"references":{"doc://AgoraRtcKit/documentation/AgoraRtcKit/AgoraRtcEngineKit/joinChannel(byToken:channelId:info:uid:joinSuccess:)":{"role":"symbol","title":"joinChannel(byToken:channelId:info:uid:joinSuccess:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"joinChannel"},{"kind":"text","text":"("},{"kind":"externalParam","text":"byToken"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"channelId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"uid"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"joinSuccess"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?) -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"abstract":[{"type":"text","text":"Joins a channel."},{"type":"text","text":" "},{"type":"text","text":"When the connection between the client and Agoraâ€™s server is interrupted due"},{"type":"text","text":" "},{"type":"text","text":"to poor network conditions, the SDK tries reconnecting to the server. When"},{"type":"text","text":" "},{"type":"text","text":"the local client successfully rejoins the channel, the SDK triggers the"},{"type":"text","text":" "},{"type":"text","text":"didRejoinChannel callback on the local client.A successful call of this"},{"type":"text","text":" "},{"type":"text","text":"method triggers the following callbacks:The local client: The didJoinChannel"},{"type":"text","text":" "},{"type":"text","text":"and connectionChangedToState callbacks.The remote client: didJoinedOfUid , if"},{"type":"text","text":" "},{"type":"text","text":"the user joining the channel is in the Communication profile or is a host in"},{"type":"text","text":" "},{"type":"text","text":"the Live-broadcasting profile.This method enables users to join a channel."},{"type":"text","text":" "},{"type":"text","text":"Users in the same channel can talk to each other, and multiple users in the"},{"type":"text","text":" "},{"type":"text","text":"same channel can start a group chat. Users with different App IDs cannot call"},{"type":"text","text":" "},{"type":"text","text":"each other.Once a user joins the channel, the user subscribes to the audio"},{"type":"text","text":" "},{"type":"text","text":"and video streams of all the other users in the channel by default, giving"},{"type":"text","text":" "},{"type":"text","text":"rise to usage and billing calculation. To stop subscribing to a specified"},{"type":"text","text":" "},{"type":"text","text":"stream or all remote streams, call the corresponding mute methods."}],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/joinChannel(byToken:channelId:info:uid:joinSuccess:)","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"joinChannelByToken:channelId:info:uid:joinSuccess:"}],"url":"\/documentation\/agorartckit\/agorartcenginekit\/joinchannel(bytoken:channelid:info:uid:joinsuccess:)"},"doc://AgoraRtcKit/documentation/AgoraRtcKit/AgoraRtcEngineKit/renewToken(_:)":{"role":"symbol","title":"renewToken(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"renewToken"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"abstract":[{"type":"text","text":"Renews the token."},{"type":"text","text":" "},{"type":"text","text":"The SDK triggers the tokenPrivilegeWillExpire callback.The"},{"type":"text","text":" "},{"type":"text","text":"connectionChangedToState callback reports"},{"type":"text","text":" "},{"type":"text","text":"AgoraConnectionChangedReasonTokenExpired(9)."}],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/renewToken(_:)","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"renewToken:"}],"url":"\/documentation\/agorartckit\/agorartcenginekit\/renewtoken(_:)"},"doc://AgoraRtcKit/documentation/AgoraRtcKit/AgoraRtcEngineKit/getConnectionState()":{"role":"symbol","title":"getConnectionState()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getConnectionState"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AgoraConnectionState","preciseIdentifier":"c:@E@AgoraConnectionState"}],"abstract":[{"type":"text","text":"Gets the current connection state of the SDK."},{"type":"text","text":" "},{"type":"text","text":"You can call this method either before or after joining a channel."}],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/getConnectionState()","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"getConnectionState"}],"url":"\/documentation\/agorartckit\/agorartcenginekit\/getconnectionstate()"},"doc://AgoraRtcKit/documentation/AgoraRtcKit/AgoraRtcEngineKit/updateChannel(with:)":{"role":"symbol","title":"updateChannel(with:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateChannel"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AgoraRtcChannelMediaOptions","preciseIdentifier":"c:objc(cs)AgoraRtcChannelMediaOptions"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"abstract":[{"type":"text","text":"Updates the channel media options after joining the channel."}],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/updateChannel(with:)","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"updateChannelWithMediaOptions:"}],"url":"\/documentation\/agorartckit\/agorartcenginekit\/updatechannel(with:)"},"doc://AgoraRtcKit/documentation/AgoraRtcKit":{"role":"collection","title":"AgoraRtcKit","abstract":[{"type":"text","text":"Summary"}],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit","kind":"symbol","type":"topic","url":"\/documentation\/agorartckit"},"doc://AgoraRtcKit/documentation/AgoraRtcKit/AgoraRtcEngineKit":{"role":"symbol","title":"AgoraRtcEngineKit","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AgoraRtcEngineKit"}],"abstract":[{"type":"text","text":"The basic interface of the Agora SDK that implements the core functions of"},{"type":"text","text":" "},{"type":"text","text":"real-time communication. AgoraRtcEngineKit provides the main methods that"},{"type":"text","text":" "},{"type":"text","text":"your app can call."}],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AgoraRtcEngineKit"}],"url":"\/documentation\/agorartckit\/agorartcenginekit"},"doc://AgoraRtcKit/documentation/AgoraRtcKit/AgoraRtcEngineKit/joinChannel(byToken:channelId:uid:mediaOptions:joinSuccess:)":{"role":"symbol","title":"joinChannel(byToken:channelId:uid:mediaOptions:joinSuccess:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"joinChannel"},{"kind":"text","text":"("},{"kind":"externalParam","text":"byToken"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"channelId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"uid"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"mediaOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AgoraRtcChannelMediaOptions","preciseIdentifier":"c:objc(cs)AgoraRtcChannelMediaOptions"},{"kind":"text","text":", "},{"kind":"externalParam","text":"joinSuccess"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?) -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"abstract":[{"type":"text","text":"Joins a channel with media options."},{"type":"text","text":" "},{"type":"text","text":"This method enables users to join a channel. Users in the same channel can"},{"type":"text","text":" "},{"type":"text","text":"talk to each other, and multiple users in the same channel can start a group"},{"type":"text","text":" "},{"type":"text","text":"chat. Users with different App IDs cannot call each other.A successful call"},{"type":"text","text":" "},{"type":"text","text":"of this method triggers the following callbacks:The local client: The"},{"type":"text","text":" "},{"type":"text","text":"didJoinChannel and connectionChangedToState callbacks.The remote client:"},{"type":"text","text":" "},{"type":"text","text":"didJoinedOfUid , if the user joining the channel is in the Communication"},{"type":"text","text":" "},{"type":"text","text":"profile or is a host in the Live-broadcasting profile.When the connection"},{"type":"text","text":" "},{"type":"text","text":"between the client and Agoraâ€™s server is interrupted due to poor network"},{"type":"text","text":" "},{"type":"text","text":"conditions, the SDK tries reconnecting to the server. When the local client"},{"type":"text","text":" "},{"type":"text","text":"successfully rejoins the channel, the SDK triggers the didRejoinChannel"},{"type":"text","text":" "},{"type":"text","text":"callback on the local client.Compared to joinChannelByToken [1\/4] , this"},{"type":"text","text":" "},{"type":"text","text":"method adds the options parameter to configure whether to automatically"},{"type":"text","text":" "},{"type":"text","text":"subscribe to all remote audio and video streams in the channel when the user"},{"type":"text","text":" "},{"type":"text","text":"joins the channel. By default, the user subscribes to the audio and video"},{"type":"text","text":" "},{"type":"text","text":"streams of all the other users in the channel, giving rise to usage and"},{"type":"text","text":" "},{"type":"text","text":"billings. To unsubscribe, set the options parameter or call the mute methods"},{"type":"text","text":" "},{"type":"text","text":"accordingly.This method allows users to join only one channel at a"},{"type":"text","text":" "},{"type":"text","text":"time.Ensure that the app ID you use to generate the token is the same app ID"},{"type":"text","text":" "},{"type":"text","text":"that you pass in the sharedEngineWithConfig method; otherwise, you may fail"},{"type":"text","text":" "},{"type":"text","text":"to join the channel by token."}],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/joinChannel(byToken:channelId:uid:mediaOptions:joinSuccess:)","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"joinChannelByToken:channelId:uid:mediaOptions:joinSuccess:"}],"url":"\/documentation\/agorartckit\/agorartcenginekit\/joinchannel(bytoken:channelid:uid:mediaoptions:joinsuccess:)"},"doc://AgoraRtcKit/documentation/AgoraRtcKit/AgoraRtcEngineKit/leaveChannel(_:)":{"role":"symbol","title":"leaveChannel(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"leaveChannel"},{"kind":"text","text":"((("},{"kind":"typeIdentifier","text":"AgoraChannelStats","preciseIdentifier":"c:objc(cs)AgoraChannelStats"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?) -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"abstract":[{"type":"text","text":"Leaves a channel."},{"type":"text","text":" "},{"type":"text","text":"This method releases all resources related to the session.This method call is"},{"type":"text","text":" "},{"type":"text","text":"asynchronous. When this method returns, it does not necessarily mean that the"},{"type":"text","text":" "},{"type":"text","text":"user has left the channel.After joining the channel, you must call this"},{"type":"text","text":" "},{"type":"text","text":"method or leaveChannel [2\/2] to end the call, otherwise, the next call cannot"},{"type":"text","text":" "},{"type":"text","text":"be started.If you successfully call this method and leave the channel, the"},{"type":"text","text":" "},{"type":"text","text":"following callbacks are triggered:The local client: didLeaveChannelWithStats"},{"type":"text","text":" "},{"type":"text","text":".The remote client: didOfflineOfUid , if the user joining the channel is in"},{"type":"text","text":" "},{"type":"text","text":"the Communication profile, or is a host in the Live-broadcasting profile.If"},{"type":"text","text":" "},{"type":"text","text":"you call destroy immediately after calling this method, the SDK does not"},{"type":"text","text":" "},{"type":"text","text":"trigger the didLeaveChannelWithStats callback.If you have called"},{"type":"text","text":" "},{"type":"text","text":"joinChannelExByToken [1\/2] to join multiple channels, calling this method"},{"type":"text","text":" "},{"type":"text","text":"will leave the channels when calling joinChannelByToken [2\/4] and"},{"type":"text","text":" "},{"type":"text","text":"joinChannelExByToken [1\/2] at the same time."}],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/leaveChannel(_:)","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"leaveChannel:"}],"url":"\/documentation\/agorartckit\/agorartcenginekit\/leavechannel(_:)"},"doc://AgoraRtcKit/documentation/AgoraRtcKit/AgoraRtcEngineKit/setClientRole(_:options:)":{"role":"symbol","title":"setClientRole(_:options:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setClientRole"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"AgoraClientRole","preciseIdentifier":"c:@E@AgoraClientRole"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AgoraClientRoleOptions","preciseIdentifier":"c:objc(cs)AgoraClientRoleOptions"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"abstract":[{"type":"text","text":"Sets the user role and level in an interactive live streaming channel."},{"type":"text","text":" "},{"type":"text","text":"In the interactive live streaming profile, the SDK sets the user role as"},{"type":"text","text":" "},{"type":"text","text":"audience by default. You can call this method to set the user role as"},{"type":"text","text":" "},{"type":"text","text":"host.You can call this method either before or after joining a channel.If you"},{"type":"text","text":" "},{"type":"text","text":"call this method to set the userâ€™s role as the host before joining the"},{"type":"text","text":" "},{"type":"text","text":"channel and set the local video property through the setupLocalVideo method,"},{"type":"text","text":" "},{"type":"text","text":"the local video preview is automatically enabled when the user joins the"},{"type":"text","text":" "},{"type":"text","text":"channel.If you call this method to switch the user role after joining a"},{"type":"text","text":" "},{"type":"text","text":"channel, the SDK automatically does the following:Calls muteLocalAudioStream"},{"type":"text","text":" "},{"type":"text","text":"and muteLocalVideoStream to change the publishing state.Triggers"},{"type":"text","text":" "},{"type":"text","text":"didClientRoleChanged on the local client.Triggers didJoinedOfUid or"},{"type":"text","text":" "},{"type":"text","text":"didOfflineOfUid on the remote client.The difference between this method and"},{"type":"text","text":" "},{"type":"text","text":"setClientRole [1\/2] is that this method can set the user level in addition to"},{"type":"text","text":" "},{"type":"text","text":"the user role.The user role (role) determines the permissions that the SDK"},{"type":"text","text":" "},{"type":"text","text":"grants to a user, such as permission to send local streams, receive remote"},{"type":"text","text":" "},{"type":"text","text":"streams, and push streams to a CDN address.The user level (level) determines"},{"type":"text","text":" "},{"type":"text","text":"the level of services that a user can enjoy within the permissions of the"},{"type":"text","text":" "},{"type":"text","text":"userâ€™s role. For example, an audience member can choose to receive remote"},{"type":"text","text":" "},{"type":"text","text":"streams with low latency or ultra-low latency. User level affects the pricing"},{"type":"text","text":" "},{"type":"text","text":"of services.This method applies to the interactive live streaming profile"},{"type":"text","text":" "},{"type":"text","text":"(the profile parameter of setChannelProfile is"},{"type":"text","text":" "},{"type":"text","text":"AgoraChannelProfileLiveBroadcasting) only."}],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/setClientRole(_:options:)","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"setClientRole:options:"}],"url":"\/documentation\/agorartckit\/agorartcenginekit\/setclientrole(_:options:)"},"doc://AgoraRtcKit/documentation/AgoraRtcKit/AgoraRtcEngineKit/leaveChannel(_:leaveChannelBlock:)":{"role":"symbol","title":"leaveChannel(_:leaveChannelBlock:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"leaveChannel"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"AgoraLeaveChannelOptions","preciseIdentifier":"c:objc(cs)AgoraLeaveChannelOptions"},{"kind":"text","text":", "},{"kind":"externalParam","text":"leaveChannelBlock"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"AgoraChannelStats","preciseIdentifier":"c:objc(cs)AgoraChannelStats"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?) -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"abstract":[{"type":"text","text":"Sets channel options and leaves the channel."},{"type":"text","text":" "},{"type":"text","text":"If you call destroy immediately after calling this method, the SDK does not"},{"type":"text","text":" "},{"type":"text","text":"trigger the didLeaveChannelWithStats callback.If you have called"},{"type":"text","text":" "},{"type":"text","text":"joinChannelExByToken [1\/2] to join multiple channels, calling this method"},{"type":"text","text":" "},{"type":"text","text":"will leave the channels when calling joinChannelByToken [2\/4] and"},{"type":"text","text":" "},{"type":"text","text":"joinChannelExByToken [1\/2] at the same time.This method will release all"},{"type":"text","text":" "},{"type":"text","text":"resources related to the session, leave the channel, that is, hang up or exit"},{"type":"text","text":" "},{"type":"text","text":"the call. This method can be called whether or not a call is currently in"},{"type":"text","text":" "},{"type":"text","text":"progress.After joining the channel, you must call this method or to end the"},{"type":"text","text":" "},{"type":"text","text":"call, otherwise, the next call cannot be started.This method call is"},{"type":"text","text":" "},{"type":"text","text":"asynchronous. When this method returns, it does not necessarily mean that the"},{"type":"text","text":" "},{"type":"text","text":"user has left the channel. After actually leaving the channel, the local user"},{"type":"text","text":" "},{"type":"text","text":"triggers the didLeaveChannelWithStats callback; after the user in the"},{"type":"text","text":" "},{"type":"text","text":"communication scenario and the host in the live streaming scenario leave the"},{"type":"text","text":" "},{"type":"text","text":"channel, the remote user triggers the didOfflineOfUid callback."}],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/leaveChannel(_:leaveChannelBlock:)","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"leaveChannel:leaveChannelBlock:"}],"url":"\/documentation\/agorartckit\/agorartcenginekit\/leavechannel(_:leavechannelblock:)"},"doc://AgoraRtcKit/documentation/AgoraRtcKit/AgoraRtcEngineKit/setClientRole(_:)":{"role":"symbol","title":"setClientRole(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setClientRole"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"AgoraClientRole","preciseIdentifier":"c:@E@AgoraClientRole"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"abstract":[{"type":"text","text":"Sets the client role."},{"type":"text","text":" "},{"type":"text","text":"If you call this method to set the userâ€™s role as the host before joining the"},{"type":"text","text":" "},{"type":"text","text":"channel and set the local video property through the setupLocalVideo method,"},{"type":"text","text":" "},{"type":"text","text":"the local video preview is automatically enabled when the user joins the"},{"type":"text","text":" "},{"type":"text","text":"channel.You can call this method either before or after joining the channel"},{"type":"text","text":" "},{"type":"text","text":"to set the user role as audience or host.If you call this method to switch"},{"type":"text","text":" "},{"type":"text","text":"the user role after joining the channel, the SDK triggers the following"},{"type":"text","text":" "},{"type":"text","text":"callbacks:The local client: didClientRoleChanged .The remote client:"},{"type":"text","text":" "},{"type":"text","text":"didJoinedOfUid or didOfflineOfUid (AgoraUserOfflineReasonBecomeAudience)."}],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/setClientRole(_:)","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"setClientRole:"}],"url":"\/documentation\/agorartckit\/agorartcenginekit\/setclientrole(_:)"}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"replace","path":"\/metadata\/roleHeading","value":"Instance Method"},{"op":"replace","path":"\/metadata\/title","value":"renewToken:"},{"op":"replace","path":"\/metadata\/symbolKind","value":"method"},{"op":"replace","path":"\/metadata\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"renewToken:"}]},{"op":"add","path":"\/topicSections","value":null},{"op":"add","path":"\/relationshipsSections","value":null},{"op":"replace","path":"\/seeAlsoSections","value":[{"title":"Channel Management","identifiers":["doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/joinChannel(byToken:channelId:info:uid:joinSuccess:)","doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/joinChannel(byToken:channelId:uid:mediaOptions:joinSuccess:)","doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/updateChannel(with:)","doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/leaveChannel(_:)","doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/leaveChannel(_:leaveChannelBlock:)","doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/setClientRole(_:options:)","doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/setClientRole(_:)","doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/getConnectionState()"],"generated":true}]},{"op":"replace","path":"\/primaryContentSections\/0","value":{"kind":"declarations","declarations":[{"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","text":"int","preciseIdentifier":"c:I"},{"kind":"text","text":") "},{"kind":"identifier","text":"renewToken:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NSString","preciseIdentifier":"c:objc(cs)NSString"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"token"},{"kind":"text","text":";"}],"languages":["occ"],"platforms":["iOS"]}]}},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit~1joinChannel(byToken:channelId:info:uid:joinSuccess:)\/title","value":"joinChannelByToken:channelId:info:uid:joinSuccess:"},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit~1joinChannel(byToken:channelId:info:uid:joinSuccess:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"joinChannelByToken:channelId:info:uid:joinSuccess:"}]},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit~1renewToken(_:)\/title","value":"renewToken:"},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit~1renewToken(_:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"renewToken:"}]},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit~1getConnectionState()\/title","value":"getConnectionState"},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit~1getConnectionState()\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"getConnectionState"}]},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit~1updateChannel(with:)\/title","value":"updateChannelWithMediaOptions:"},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit~1updateChannel(with:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"updateChannelWithMediaOptions:"}]},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit\/title","value":"AgoraRtcEngineKit"},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit\/fragments","value":[{"kind":"identifier","text":"AgoraRtcEngineKit"}]},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit~1joinChannel(byToken:channelId:uid:mediaOptions:joinSuccess:)\/title","value":"joinChannelByToken:channelId:uid:mediaOptions:joinSuccess:"},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit~1joinChannel(byToken:channelId:uid:mediaOptions:joinSuccess:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"joinChannelByToken:channelId:uid:mediaOptions:joinSuccess:"}]},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit~1leaveChannel(_:)\/title","value":"leaveChannel:"},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit~1leaveChannel(_:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"leaveChannel:"}]},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit~1setClientRole(_:options:)\/title","value":"setClientRole:options:"},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit~1setClientRole(_:options:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"setClientRole:options:"}]},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit~1leaveChannel(_:leaveChannelBlock:)\/title","value":"leaveChannel:leaveChannelBlock:"},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit~1leaveChannel(_:leaveChannelBlock:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"leaveChannel:leaveChannelBlock:"}]},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit~1setClientRole(_:)\/title","value":"setClientRole:"},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit~1setClientRole(_:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"setClientRole:"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}