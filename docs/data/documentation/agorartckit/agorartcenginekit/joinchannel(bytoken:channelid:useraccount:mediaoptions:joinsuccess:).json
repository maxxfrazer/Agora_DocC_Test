{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"joinChannel"},{"kind":"text","text":"("},{"kind":"externalParam","text":"byToken"},{"kind":"text","text":" "},{"kind":"internalParam","text":"token"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"channelId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"userAccount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"mediaOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcChannelMediaOptions","preciseIdentifier":"c:objc(cs)AgoraRtcChannelMediaOptions","text":"AgoraRtcChannelMediaOptions"},{"kind":"text","text":", "},{"kind":"externalParam","text":"joinSuccess"},{"kind":"text","text":" "},{"kind":"internalParam","text":"joinSuccessBlock"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")? = nil) -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"token","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The token generated on your server for authentication."}]}]},{"name":"channelId","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The channel name. This parameter signifies the channel"},{"type":"text","text":" "},{"type":"text","text":"in which users engage in real-time audio and video interaction. Under the"},{"type":"text","text":" "},{"type":"text","text":"premise of the same App ID, users who fill in the same channel ID enter the"},{"type":"text","text":" "},{"type":"text","text":"same channel for audio and video interaction. The string length must be less"},{"type":"text","text":" "},{"type":"text","text":"than 64 bytes. Supported characters:All lowercase English letters: a to z.All"},{"type":"text","text":" "},{"type":"text","text":"uppercase English letters: A to Z.All numeric characters: 0 to 9.Space”!”,"},{"type":"text","text":" "},{"type":"text","text":"“#”, “$”, “%”, “&”, “(”, “)”, “+”, “-”, “:”, “;”, “<”, “= “, “.”, “>”, “?”,"},{"type":"text","text":" "},{"type":"text","text":"“@”, “[”, “]”, “^”, “_”, “{”, “}”, “|”, “~”, “,”"}]}]},{"name":"userAccount","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The user account. This parameter is used to identify"},{"type":"text","text":" "},{"type":"text","text":"the user in the channel for real-time audio and video engagement. You need to"},{"type":"text","text":" "},{"type":"text","text":"set and manage user accounts yourself and ensure that each user account in"},{"type":"text","text":" "},{"type":"text","text":"the same channel is unique. The maximum length of this parameter is 255"},{"type":"text","text":" "},{"type":"text","text":"bytes. Ensure that you set this parameter and do not set it as nil. Supported"},{"type":"text","text":" "},{"type":"text","text":"characters are (89 in total):The 26 lowercase English letters: a to z.The 26"},{"type":"text","text":" "},{"type":"text","text":"uppercase English letters: A to Z.All numeric characters: 0 to 9.Space”!”,"},{"type":"text","text":" "},{"type":"text","text":"“#”, “$”, “%”, “&”, “(”, “)”, “+”, “-”, “:”, “;”, “<”, “= “, “.”, “>”, “?”,"},{"type":"text","text":" "},{"type":"text","text":"“@”, “[”, “]”, “^”, “_”, “{”, “}”, “|”, “~”, “,”"}]}]},{"name":"mediaOptions","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The channel media options. See"},{"type":"text","text":" "},{"type":"text","text":"AgoraRtcChannelMediaOptions ."}]}]},{"name":"joinSuccessBlock","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The block of a user joining the specified"},{"type":"text","text":" "},{"type":"text","text":"channel. If you implement both joinSuccessBlock and didJoinChannel ,"},{"type":"text","text":" "},{"type":"text","text":"joinSuccessBlock takes higher priority than didJoinChannel. Agora recommends"},{"type":"text","text":" "},{"type":"text","text":"setting joinSuccessBlock as nil to use didJoinChannel."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"0: Success. < 0: Failure. -2: The parameter is invalid. For"},{"type":"text","text":" "},{"type":"text","text":"example, the token is invalid, the uid parameter is not set to an integer, or"},{"type":"text","text":" "},{"type":"text","text":"the value of a member in AgoraRtcChannelMediaOptions is invalid. You need to"},{"type":"text","text":" "},{"type":"text","text":"pass in a valid parameter and join the channel again. -3: Failes to"},{"type":"text","text":" "},{"type":"text","text":"initialize the AgoraRtcEngineKit object. You need to reinitialize the"},{"type":"text","text":" "},{"type":"text","text":"AgoraRtcEngineKit object. -7: The AgoraRtcEngineKit object has not been"},{"type":"text","text":" "},{"type":"text","text":"initialized. You need to initialize the AgoraRtcEngineKit object before"},{"type":"text","text":" "},{"type":"text","text":"calling this method. -8: The internal state of the AgoraRtcEngineKit object"},{"type":"text","text":" "},{"type":"text","text":"is wrong. The typical cause is that you call this method to join the channel"},{"type":"text","text":" "},{"type":"text","text":"without calling startEchoTestWithInterval to stop the test after calling"},{"type":"text","text":" "},{"type":"text","text":"stopEchoTest to start a call loop test. You need to call stopEchoTest before"},{"type":"text","text":" "},{"type":"text","text":"calling this method. -17: The request to join the channel is rejected. The"},{"type":"text","text":" "},{"type":"text","text":"typical cause is that the user is in the channel. Agora recomments that you"},{"type":"text","text":" "},{"type":"text","text":"can use the connectionChangedToState callback to determine whether the user"},{"type":"text","text":" "},{"type":"text","text":"exists in the channel. Do not call this method to join the channel unless you"},{"type":"text","text":" "},{"type":"text","text":"receive the AgoraConnectionStateDisconnected (1) state. -102: The channel"},{"type":"text","text":" "},{"type":"text","text":"name is invalid. You need to pass in a valid channelname in channelId to"},{"type":"text","text":" "},{"type":"text","text":"rejoin the channel. -121: The user ID is invalid. You need to pass in a valid"},{"type":"text","text":" "},{"type":"text","text":"user ID in uid to rejoin the channel."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/agorartckit\/agorartcenginekit\/joinchannel(bytoken:channelid:useraccount:mediaoptions:joinsuccess:)"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/agorartckit\/agorartcenginekit\/joinchannel(bytoken:channelid:useraccount:mediaoptions:joinsuccess:)"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/joinChannel(byToken:channelId:userAccount:mediaOptions:joinSuccess:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Joins the channel with a user account, and configures whether to"},{"type":"text","text":" "},{"type":"text","text":"automatically subscribe to audio or video streams after joining the channel."},{"type":"text","text":" "},{"type":"text","text":"This method allows a user to join the channel with the user account. After"},{"type":"text","text":" "},{"type":"text","text":"the user successfully joins the channel, the SDK triggers the following"},{"type":"text","text":" "},{"type":"text","text":"callbacks:The local client: didLocalUserRegisteredWithUserId , didJoinChannel"},{"type":"text","text":" "},{"type":"text","text":"and connectionChangedToState callbacks.The remote client: The didJoinedOfUid"},{"type":"text","text":" "},{"type":"text","text":"callback, if the user is in the COMMUNICATION profile, and the"},{"type":"text","text":" "},{"type":"text","text":"didUserInfoUpdatedWithUserId callback if the user is a host in the"},{"type":"text","text":" "},{"type":"text","text":"LIVE_BROADCASTING profile.Once a user joins the channel, the user subscribes"},{"type":"text","text":" "},{"type":"text","text":"to the audio and video streams of all the other users in the channel by"},{"type":"text","text":" "},{"type":"text","text":"default, giving rise to usage and billing calculation. To stop subscribing to"},{"type":"text","text":" "},{"type":"text","text":"a specified stream or all remote streams, call the corresponding mute"},{"type":"text","text":" "},{"type":"text","text":"methods.Compared to joinChannelByToken [3\/4] , this method adds the options"},{"type":"text","text":" "},{"type":"text","text":"parameter to configure whether to automatically subscribe to all remote audio"},{"type":"text","text":" "},{"type":"text","text":"and video streams in the channel when the user joins the channel. By default,"},{"type":"text","text":" "},{"type":"text","text":"the user subscribes to the audio and video streams of all the other users in"},{"type":"text","text":" "},{"type":"text","text":"the channel, giving rise to usage and billings. To unsubscribe, set the"},{"type":"text","text":" "},{"type":"text","text":"options parameter or call the mute methods accordingly.To ensure smooth"},{"type":"text","text":" "},{"type":"text","text":"communication, use the same parameter type to identify the user. For example,"},{"type":"text","text":" "},{"type":"text","text":"if a user joins the channel with a user ID, then ensure all the other users"},{"type":"text","text":" "},{"type":"text","text":"use the user ID too. The same applies to the user account. If a user joins"},{"type":"text","text":" "},{"type":"text","text":"the channel with the Agora Web SDK, ensure that the ID of the user is set to"},{"type":"text","text":" "},{"type":"text","text":"the same parameter type."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"joinChannel"},{"kind":"text","text":"("},{"kind":"externalParam","text":"byToken"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"channelId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"userAccount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"mediaOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AgoraRtcChannelMediaOptions","preciseIdentifier":"c:objc(cs)AgoraRtcChannelMediaOptions"},{"kind":"text","text":", "},{"kind":"externalParam","text":"joinSuccess"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?) -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"title":"joinChannel(byToken:channelId:userAccount:mediaOptions:joinSuccess:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"c:objc(cs)AgoraRtcEngineKit(im)joinChannelByToken:channelId:userAccount:mediaOptions:joinSuccess:","modules":[{"name":"AgoraRtcKit"}],"navigatorTitle":[{"kind":"identifier","text":"joinChannelByToken:channelId:userAccount:mediaOptions:joinSuccess:"}]},"hierarchy":{"paths":[["doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit","doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit"]]},"references":{"doc://AgoraRtcKit/documentation/AgoraRtcKit":{"role":"collection","title":"AgoraRtcKit","abstract":[{"type":"text","text":"Summary"}],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit","kind":"symbol","type":"topic","url":"\/documentation\/agorartckit"},"doc://AgoraRtcKit/documentation/AgoraRtcKit/AgoraRtcEngineKit":{"role":"symbol","title":"AgoraRtcEngineKit","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AgoraRtcEngineKit"}],"abstract":[{"type":"text","text":"The basic interface of the Agora SDK that implements the core functions of"},{"type":"text","text":" "},{"type":"text","text":"real-time communication. AgoraRtcEngineKit provides the main methods that"},{"type":"text","text":" "},{"type":"text","text":"your app can call."}],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AgoraRtcEngineKit"}],"url":"\/documentation\/agorartckit\/agorartcenginekit"},"doc://AgoraRtcKit/documentation/AgoraRtcKit/AgoraRtcChannelMediaOptions":{"role":"symbol","title":"AgoraRtcChannelMediaOptions","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AgoraRtcChannelMediaOptions"}],"abstract":[{"type":"text","text":"The channel media options."},{"type":"text","text":" "},{"type":"text","text":"Agora supports publishing multiple audio streams and one video stream at the"},{"type":"text","text":" "},{"type":"text","text":"same time and in the same AgoraRtcConnection . For example,"},{"type":"text","text":" "},{"type":"text","text":"publishMicrophoneTrack, publishAudioTrack, publishCustomAudioTrack, and"},{"type":"text","text":" "},{"type":"text","text":"publishMediaPlayerAudioTrack can be set as YES at the same time, but only one"},{"type":"text","text":" "},{"type":"text","text":"of publishCameraTrack, publishScreenCaptureVideopublishCustomVideoTrack, or"},{"type":"text","text":" "},{"type":"text","text":"publishEncodedVideoTrack can be set as YES."}],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcChannelMediaOptions","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AgoraRtcChannelMediaOptions"}],"url":"\/documentation\/agorartckit\/agorartcchannelmediaoptions"},"doc://AgoraRtcKit/documentation/AgoraRtcKit/AgoraRtcEngineKit/joinChannel(byToken:channelId:userAccount:mediaOptions:joinSuccess:)":{"role":"symbol","title":"joinChannel(byToken:channelId:userAccount:mediaOptions:joinSuccess:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"joinChannel"},{"kind":"text","text":"("},{"kind":"externalParam","text":"byToken"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"channelId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"userAccount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"mediaOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AgoraRtcChannelMediaOptions","preciseIdentifier":"c:objc(cs)AgoraRtcChannelMediaOptions"},{"kind":"text","text":", "},{"kind":"externalParam","text":"joinSuccess"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?) -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"abstract":[{"type":"text","text":"Joins the channel with a user account, and configures whether to"},{"type":"text","text":" "},{"type":"text","text":"automatically subscribe to audio or video streams after joining the channel."},{"type":"text","text":" "},{"type":"text","text":"This method allows a user to join the channel with the user account. After"},{"type":"text","text":" "},{"type":"text","text":"the user successfully joins the channel, the SDK triggers the following"},{"type":"text","text":" "},{"type":"text","text":"callbacks:The local client: didLocalUserRegisteredWithUserId , didJoinChannel"},{"type":"text","text":" "},{"type":"text","text":"and connectionChangedToState callbacks.The remote client: The didJoinedOfUid"},{"type":"text","text":" "},{"type":"text","text":"callback, if the user is in the COMMUNICATION profile, and the"},{"type":"text","text":" "},{"type":"text","text":"didUserInfoUpdatedWithUserId callback if the user is a host in the"},{"type":"text","text":" "},{"type":"text","text":"LIVE_BROADCASTING profile.Once a user joins the channel, the user subscribes"},{"type":"text","text":" "},{"type":"text","text":"to the audio and video streams of all the other users in the channel by"},{"type":"text","text":" "},{"type":"text","text":"default, giving rise to usage and billing calculation. To stop subscribing to"},{"type":"text","text":" "},{"type":"text","text":"a specified stream or all remote streams, call the corresponding mute"},{"type":"text","text":" "},{"type":"text","text":"methods.Compared to joinChannelByToken [3\/4] , this method adds the options"},{"type":"text","text":" "},{"type":"text","text":"parameter to configure whether to automatically subscribe to all remote audio"},{"type":"text","text":" "},{"type":"text","text":"and video streams in the channel when the user joins the channel. By default,"},{"type":"text","text":" "},{"type":"text","text":"the user subscribes to the audio and video streams of all the other users in"},{"type":"text","text":" "},{"type":"text","text":"the channel, giving rise to usage and billings. To unsubscribe, set the"},{"type":"text","text":" "},{"type":"text","text":"options parameter or call the mute methods accordingly.To ensure smooth"},{"type":"text","text":" "},{"type":"text","text":"communication, use the same parameter type to identify the user. For example,"},{"type":"text","text":" "},{"type":"text","text":"if a user joins the channel with a user ID, then ensure all the other users"},{"type":"text","text":" "},{"type":"text","text":"use the user ID too. The same applies to the user account. If a user joins"},{"type":"text","text":" "},{"type":"text","text":"the channel with the Agora Web SDK, ensure that the ID of the user is set to"},{"type":"text","text":" "},{"type":"text","text":"the same parameter type."}],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcEngineKit\/joinChannel(byToken:channelId:userAccount:mediaOptions:joinSuccess:)","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"joinChannelByToken:channelId:userAccount:mediaOptions:joinSuccess:"}],"url":"\/documentation\/agorartckit\/agorartcenginekit\/joinchannel(bytoken:channelid:useraccount:mediaoptions:joinsuccess:)"}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"replace","path":"\/metadata\/roleHeading","value":"Instance Method"},{"op":"replace","path":"\/metadata\/title","value":"joinChannelByToken:channelId:userAccount:mediaOptions:joinSuccess:"},{"op":"replace","path":"\/metadata\/symbolKind","value":"method"},{"op":"replace","path":"\/metadata\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"joinChannelByToken:channelId:userAccount:mediaOptions:joinSuccess:"}]},{"op":"add","path":"\/topicSections","value":null},{"op":"add","path":"\/relationshipsSections","value":null},{"op":"add","path":"\/seeAlsoSections","value":null},{"op":"replace","path":"\/primaryContentSections\/0","value":{"kind":"declarations","declarations":[{"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","text":"int","preciseIdentifier":"c:I"},{"kind":"text","text":") "},{"kind":"identifier","text":"joinChannelByToken:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NSString","preciseIdentifier":"c:objc(cs)NSString"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"token"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelId:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NSString","preciseIdentifier":"c:objc(cs)NSString"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"channelId"},{"kind":"text","text":" "},{"kind":"identifier","text":"userAccount:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NSString","preciseIdentifier":"c:objc(cs)NSString"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"userAccount"},{"kind":"text","text":" "},{"kind":"identifier","text":"mediaOptions:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraRtcChannelMediaOptions","preciseIdentifier":"c:objc(cs)AgoraRtcChannelMediaOptions","text":"AgoraRtcChannelMediaOptions"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"mediaOptions"},{"kind":"text","text":" "},{"kind":"identifier","text":"joinSuccess:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"void (^)(NSString *, unsigned long, long)","preciseIdentifier":"c:BFv(#*$objc(cs)NSString#l#L)"},{"kind":"text","text":") "},{"kind":"internalParam","text":"joinSuccessBlock"},{"kind":"text","text":";"}],"languages":["occ"],"platforms":["iOS"]}]}},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit\/title","value":"AgoraRtcEngineKit"},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit\/fragments","value":[{"kind":"identifier","text":"AgoraRtcEngineKit"}]},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcChannelMediaOptions\/title","value":"AgoraRtcChannelMediaOptions"},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcChannelMediaOptions\/fragments","value":[{"kind":"identifier","text":"AgoraRtcChannelMediaOptions"}]},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit~1joinChannel(byToken:channelId:userAccount:mediaOptions:joinSuccess:)\/title","value":"joinChannelByToken:channelId:userAccount:mediaOptions:joinSuccess:"},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraRtcEngineKit~1joinChannel(byToken:channelId:userAccount:mediaOptions:joinSuccess:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"joinChannelByToken:channelId:userAccount:mediaOptions:joinSuccess:"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}