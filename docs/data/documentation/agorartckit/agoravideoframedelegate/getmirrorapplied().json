{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"optional"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getMirrorApplied"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Sets whether or not to mirror the captured video: YES : Mirror the"},{"type":"text","text":" "},{"type":"text","text":"captured video. NO : (Default) Do not mirror the captured video."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/agorartckit\/agoravideoframedelegate\/getmirrorapplied()"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/agorartckit\/agoravideoframedelegate\/getmirrorapplied()"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraVideoFrameDelegate\/getMirrorApplied()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Occurs each time the SDK receives a video frame and prompts you whether or"},{"type":"text","text":" "},{"type":"text","text":"not to mirror the captured video. If the video data you want to obtain is a"},{"type":"text","text":" "},{"type":"text","text":"mirror image of the original video, you need to register this callback when"},{"type":"text","text":" "},{"type":"text","text":"calling setVideoFrameDelegate . After you successfully register the video"},{"type":"text","text":" "},{"type":"text","text":"frame observer, the SDK triggers this callback each time it receives a video"},{"type":"text","text":" "},{"type":"text","text":"frame. You need to set whether or not to mirror the video frame in the return"},{"type":"text","text":" "},{"type":"text","text":"value of this callback.This function only supports video data in RGBA and"},{"type":"text","text":" "},{"type":"text","text":"YUV420.Both this method and the setVideoEncoderConfiguration method support"},{"type":"text","text":" "},{"type":"text","text":"setting the mirroring effect. Agora recommends that you only choose one"},{"type":"text","text":" "},{"type":"text","text":"method to set it up. Using both methods at the same time causes the mirroring"},{"type":"text","text":" "},{"type":"text","text":"effect to overlap, which causes the mirroring settings to fail."}],"kind":"symbol","metadata":{"navigatorTitle":[{"kind":"identifier","text":"getMirrorApplied"}],"role":"symbol","title":"getMirrorApplied()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getMirrorApplied"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"symbolKind":"method","externalID":"c:objc(pl)AgoraVideoFrameDelegate(im)getMirrorApplied","required":true,"modules":[{"name":"AgoraRtcKit"}]},"hierarchy":{"paths":[["doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit","doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraVideoFrameDelegate"]]},"references":{"doc://AgoraRtcKit/documentation/AgoraRtcKit":{"role":"collection","title":"AgoraRtcKit","abstract":[{"type":"text","text":"Summary"}],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit","kind":"symbol","type":"topic","url":"\/documentation\/agorartckit"},"doc://AgoraRtcKit/documentation/AgoraRtcKit/AgoraVideoFrameDelegate/getMirrorApplied()":{"navigatorTitle":[{"kind":"identifier","text":"getMirrorApplied"}],"role":"symbol","title":"getMirrorApplied()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getMirrorApplied"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Occurs each time the SDK receives a video frame and prompts you whether or"},{"type":"text","text":" "},{"type":"text","text":"not to mirror the captured video. If the video data you want to obtain is a"},{"type":"text","text":" "},{"type":"text","text":"mirror image of the original video, you need to register this callback when"},{"type":"text","text":" "},{"type":"text","text":"calling setVideoFrameDelegate . After you successfully register the video"},{"type":"text","text":" "},{"type":"text","text":"frame observer, the SDK triggers this callback each time it receives a video"},{"type":"text","text":" "},{"type":"text","text":"frame. You need to set whether or not to mirror the video frame in the return"},{"type":"text","text":" "},{"type":"text","text":"value of this callback.This function only supports video data in RGBA and"},{"type":"text","text":" "},{"type":"text","text":"YUV420.Both this method and the setVideoEncoderConfiguration method support"},{"type":"text","text":" "},{"type":"text","text":"setting the mirroring effect. Agora recommends that you only choose one"},{"type":"text","text":" "},{"type":"text","text":"method to set it up. Using both methods at the same time causes the mirroring"},{"type":"text","text":" "},{"type":"text","text":"effect to overlap, which causes the mirroring settings to fail."}],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraVideoFrameDelegate\/getMirrorApplied()","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/agorartckit\/agoravideoframedelegate\/getmirrorapplied()"},"doc://AgoraRtcKit/documentation/AgoraRtcKit/AgoraVideoFrameDelegate":{"role":"symbol","title":"AgoraVideoFrameDelegate","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AgoraVideoFrameDelegate"}],"abstract":[{"type":"text","text":"The IVideoFrameObserver class."}],"identifier":"doc:\/\/AgoraRtcKit\/documentation\/AgoraRtcKit\/AgoraVideoFrameDelegate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AgoraVideoFrameDelegate"}],"url":"\/documentation\/agorartckit\/agoravideoframedelegate"}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"replace","path":"\/metadata\/roleHeading","value":"Instance Method"},{"op":"replace","path":"\/metadata\/title","value":"getMirrorApplied"},{"op":"replace","path":"\/metadata\/symbolKind","value":"method"},{"op":"replace","path":"\/metadata\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"getMirrorApplied"}]},{"op":"add","path":"\/topicSections","value":null},{"op":"add","path":"\/relationshipsSections","value":null},{"op":"add","path":"\/seeAlsoSections","value":null},{"op":"replace","path":"\/primaryContentSections\/0","value":{"kind":"declarations","declarations":[{"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","text":"BOOL","preciseIdentifier":"c:@T@BOOL"},{"kind":"text","text":") "},{"kind":"identifier","text":"getMirrorApplied"},{"kind":"text","text":";"}],"languages":["occ"],"platforms":["iOS"]}]}},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraVideoFrameDelegate~1getMirrorApplied()\/title","value":"getMirrorApplied"},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraVideoFrameDelegate~1getMirrorApplied()\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"getMirrorApplied"}]},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraVideoFrameDelegate\/title","value":"AgoraVideoFrameDelegate"},{"op":"replace","path":"\/references\/doc:~1~1AgoraRtcKit~1documentation~1AgoraRtcKit~1AgoraVideoFrameDelegate\/fragments","value":[{"kind":"identifier","text":"AgoraVideoFrameDelegate"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}